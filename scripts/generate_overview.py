"""

Script de g√©n√©ration automatique du fichier 'overview.md' √† partir de 'tools.md'.

Ce script parcourt le fichier Markdown `tools.md`, rep√®re les blocs de description
associ√©s √† chaque module Python (d√©finis entre balises `<!--- ... --->` juste avant chaque bloc `::: module.nom`),
et g√©n√®re une documentation synth√©tique et lisible dans le fichier `overview.md`.

La documentation g√©n√©r√©e pr√©sente pour chaque module :
- Son nom (ex. : `data.get_constants`)
- Un encadr√© de description extraite depuis `tools.md`

Ce script est destin√© √† automatiser la cr√©ation de la documentation g√©n√©rale du projet
et s'int√®gre dans le syst√®me de documentation statique utilis√© par MkDocs.

Lancement :
    $ python scripts/generate_overview.py

D√©pendances :
- Le fichier `config/config.py` doit contenir les variables :
    TOOLS_MD_PATH : chemin vers le fichier source `tools.md`
    OVERVIEW_MD_PATH : chemin de sortie vers le fichier g√©n√©r√© `overview.md`
"""



# scripts/generate_overview.py

from pathlib import Path
import re
from config.config import TOOLS_MD_PATH, OVERVIEW_MD_PATH


def extract_module_descriptions(tools_md_path: Path) -> list[tuple[str, str]]:
    """
    Extrait les noms de modules et leurs descriptions depuis tools.md.

    Args:
        tools_md_path (Path): Chemin vers le fichier tools.md

    Returns:
        list of tuples: [(nom_du_module, description associ√©e), ...]
    """
    content = tools_md_path.read_text(encoding="utf-8")

    pattern = re.compile(
        r"<!---\s*(.*?)\s*--->\s*\n+::: ([\w\.]+)", re.DOTALL
    )

    results = []
    for match in pattern.finditer(content):
        description, module_name = match.groups()
        results.append((module_name.strip(), description.strip()))
    return results


def generate_overview_md(module_infos: list[tuple[str, str]], output_path: Path) -> None:
    """
    G√©n√®re le fichier overview.md structur√© √† partir des descriptions de modules.

    Args:
        module_infos (list): Liste de tuples (module_name, description)
        output_path (Path): Chemin du fichier output overview.md
    """
    lines = [
        "# üß≠ Vue d'ensemble des modules du projet OBY-Chat\n",
        "_Cette page fournit une description concise des principaux modules Python du projet._\n",
        "---\n\n"
    ]

    for module, desc in module_infos:
        lines.append(f"## üìÑ Module : `{module}`\n")
        lines.append(f"> **R√¥le :**\n> {desc.replace(chr(10), '\n> ')}\n")
        lines.append("---\n\n")

    output_path.write_text("\n".join(lines), encoding="utf-8")
    print(f"[‚úÖ] overview.md g√©n√©r√© avec succ√®s ‚Üí {output_path}")


if __name__ == "__main__":
    modules = extract_module_descriptions(TOOLS_MD_PATH)
    generate_overview_md(modules, OVERVIEW_MD_PATH)
